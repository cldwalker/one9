symbol_methods = Module.methods.grep(/_methods$/).map {|e| "Module##{e}" } + ['Module#constants'] +
  Kernel.methods.grep(/_variables$/).map {|e| "Kernel.#{e}" }
change symbol_methods.flatten, 'Returns array of symbols instead of array of strings'
#change 'Kernel.caller', 'Additional stacks i.e. when first entering a module'
#change 'Kernel.require', 'Value stored in $" is full path'
#change 'Kernel.proc', 'Same as Proc.new instead of being same as lambda'
change 'Hash#to_s', 'An alias of #inspect instead of a spaceless join of the elements'
change 'Hash#select', 'Returns a hash instead of an association array'
change 'Array#to_s', 'An alias of #inspect instead of a spaceless join of the elements'
change 'FileUtils#mkdir_p', 'Returns an array containing directory instead of the directory'
change 'Date.parse', 'mm/dd/yyyy syntax does not exist anymore'
change 'Time.parse', 'mm/dd/yyyy syntax does not exist anymore'
change 'Proc#arity', 'Number of parameters that would not be ignored instead of ...'
change 'Object#=~', 'Returns nil instead of false'
change 'String#[]', 'Returns string instead of number'
delete 'String#each', 'Use String#each_line instead'
delete 'String#to_a'
delete 'Kernel#to_a'
delete 'Object#type'
delete 'Array#nitems', "Replace with .compact.size"
delete 'Enumerable#enum_with_index'
delete 'Symbol#to_int'
delete 'Hash#indices'
delete 'Array#indices'
delete 'Exception#to_str'
